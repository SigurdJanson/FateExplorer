@page "/"

@using FateExplorer.ViewModel
@using System.IO

@inject ISnackbar Snackbar
@inject IStringLocalizer<Index> l10n
@inject ITheHeroViMo Hero


<MudContainer Class="mt-8 px-8"  MaxWidth=MaxWidth.Medium>
    <MudGrid Justify=Justify.Center>
        <MudItem xs=12 xxl=12>
            <MudContainer Fixed=true>
                <div Class="pa-4" Style="height:9rem; align-content:center">
                    <img src="img/FateExplorer_Blood_Logo.svg" style="width:100%;max-width:100%;max-height:100%;vertical-align: middle;" alt="Fate Explorer Logo" />
                </div>
            </MudContainer>
            <MudText Typo=Typo.body1 Align=Align.Center>
                @Quote
            </MudText>
        </MudItem>

        <MudItem xs=12>
            <MudPaper Class="pa-8 mud-theme-primary">
                <MudGrid>
                    <MudItem xs="12">
                            <InputFile id="CharacterFileInput" OnChange="UploadCharacterFile" hidden />
                            <MudStack Row=true Class="pb-8">
                                <MudFab HtmlTag="label" Size=Size.Large
                                        Variant=Variant.Filled Color=Color.Secondary Class="rounded-0" FullWidth=true
                                        StartIcon=@Icons.Material.Filled.CloudUpload
                                        for="CharacterFileInput">
                                    @l10n["btnUploadFile"]
                                </MudFab>
                                <MudStack>
                                    <MudText Typo=Typo.h5>@l10n["lblNoCharacter"]</MudText>
                                    <MudText Typo=Typo.body2>@l10n["msgLoadCharacterToUse"]</MudText>
                                </MudStack>
                            </MudStack>
                            <div>
                            <MudDivider Class="pt-8" />
                            </div>
                    </MudItem>

                    <MudItem xs=12>
                        <MudText Typo=Typo.body1 Align=Align.Center>@l10n["txtTeaserQuestion"]</MudText>
                    </MudItem>

                    <MudItem xs="12">
                        <MudCarousel Class="mud-width-full" Style="height:200px;"
                                     ShowArrows=true ShowBullets=true EnableSwipeGesture=true AutoCycle=false TData="object"
                                     UncheckedIcon=@Icons.Material.Outlined.Visibility CheckedIcon=@Icons.Material.Filled.Visibility>
                            <MudCarouselItem Color=Color.Secondary Transition=Transition.Slide>
                                    <MudStack Class="py-2 px-8" Row=true>
                                    <img src="./img/fe_unicorn.webp" style=@ImgStyle alt=@l10n["altImgUnicorn"] />
                                    <MudStack Class="py-2 px-8" Justify=Justify.FlexStart>
                                        <MudText>@l10n["lblSmartSheet"]</MudText>
                                        <MudText Typo="Typo.h6">@l10n["lblCharacterFocus"]</MudText>
                                        <MudText Typo="Typo.body2">
                                            @l10n["txtSmartSheet"]
                                        </MudText>
                                    </MudStack>
                                    </MudStack>
                            </MudCarouselItem>
                            <MudCarouselItem Color=Color.Secondary Transition=Transition.Slide>
                                    <MudStack Class="py-2 px-8" Row=true>
                                    <img src="./img/fe_dragon.webp" style=@ImgStyle alt=@l10n["altImgDragon"] />
                                    <MudStack Class="py-2 px-8" Justify=Justify.FlexStart>
                                        <MudText>@l10n["lblSmoothGamePlay"]</MudText>
                                        <MudText Typo="Typo.h6">@l10n["lblStartFinding"]</MudText>
                                        <MudText Typo="Typo.body2">
                                            @l10n["txtSmoothGamePlay"]
                                        </MudText>
                                    </MudStack>
                                    </MudStack>
                            </MudCarouselItem>
                            <MudCarouselItem Color=Color.Secondary Transition=Transition.Slide>
                                    <MudStack Class="py-2 px-8" Row=true>
                                    <img src="./img/fe_spider.webp" style=@ImgStyle alt=@l10n["altImgSpider"] />
                                    <MudStack Class="py-2 px-8" Justify=Justify.FlexStart>
                                        <MudText>@l10n["lblNeedToKnow"]</MudText>
                                        <MudText Typo="Typo.h6">@l10n["lblRichGamePlay"]</MudText>
                                        <MudText Typo="Typo.body2">
                                            @l10n["txtRichGamePlay"]
                                        </MudText>
                                    </MudStack>
                                    </MudStack>
                            </MudCarouselItem>
                        </MudCarousel>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>



        <MudItem xs=12>
            <MudPaper Class="pa-4" Elevation=0>
                <MudText Typo="Typo.body1">@l10n["Cookie1"]</MudText>
                <MudText Typo="Typo.body2" Class="mt-1">@l10n["Cookie2"]</MudText>
                <MudText Typo="Typo.body2" Class="mt-1">@l10n["Cookie3"]</MudText>
                <MudText Typo="Typo.body2" Class="mt-1">@l10n["Cookie4"]</MudText>
                <MudText Typo="Typo.body2" Class="mt-1">@l10n["Cookie5"]</MudText>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code
{
    private const string ImgStyle = "width:500px;object-fit: contain;max-width:20%;max-height:100%;vertical-align:middle;";
    private const int MaxQuotes = 1^2; // number of available quotes
    private string Quote { get; set; }

    /// <summary>
    /// 
    /// </summary>
    /// <param name="e"></param>
    /// <returns></returns>
    private async Task UploadCharacterFile(InputFileChangeEventArgs e)
    {
        bool IsExceptionFree = true;

        IBrowserFile CharacterFile = e.File;

        // TODO Do your validations here
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;

        if (CharacterFile.ContentType != "application/json")
        {
            string Message = string.Format(l10n["msgWrongContentType"], CharacterFile.ContentType);
            Snackbar.Add(Message, Severity.Error);
            IsExceptionFree = false;
        }

        //Snackbar.Add($"This files starts with letter {CharacterFile.Name.Substring(0, 1)}", Severity.Warning);
        //Snackbar.Add($"This file has the extension: {CharacterFile.Name.Split(".").Last()}", Severity.Info);

        using (var memoryStream = new MemoryStream())
        {
            if (IsExceptionFree)
            {
                await CharacterFile.OpenReadStream().CopyToAsync(memoryStream);
            }

            if (IsExceptionFree)
            {
                try
                {
                    await Hero.ReadCharacterFile(memoryStream.ToArray());
                }
                catch (ChrImportException error)
                {
                    IsExceptionFree = false;
                    string Msg = string.Format(l10n["msgCharacterImportErrorDefined"], error.GetCause());
                    Snackbar.Add(Msg, Severity.Error);
                }
                catch (Exception)
                {
                    IsExceptionFree = false;
                    Snackbar.Add(l10n["msgCharacterImportErrorUndefined"], Severity.Error);
                }
            }

            //-if (IsExceptionFree)
            //-    await OnCharacterHasLoaded.InvokeAsync();
        }
    }
    protected override void OnInitialized()
    {
        base.OnInitialized();

        Random rnd = new Random();
        int Nr = rnd.Next(1, MaxQuotes);
        Quote = l10n["FateQuote"+Nr];
    }
}