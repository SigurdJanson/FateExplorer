@page "/act"

@using FateExplorer.ViewModel
@using FateExplorer.Components

@inject IStringLocalizer<App> l10n
@inject ITheHeroViMo Hero


@if (Hero.HasBorn)
{
<MudContainer Class="mt-16 px-8" MaxWidth=MaxWidth.False>
    <MudGrid>
        <MudItem xs=12 sm=6 md=5 lg=4>
            <MudPaper Elevation=0 Outlined=true Square=true>
            <MudExpansionPanels Elevation=0>
                <MudExpansionPanel Text=@l10n["lblImportantSkill"] IsInitiallyExpanded=true DisableGutters=true>
                    <MudTabs Elevation=0 Rounded=false Centered=false>
                        <MudTabPanel Text=@l10n["lblMostUsed"]>
                            <MudList Clickable=true Style="overflow:auto; height:280px">
                                @foreach (var skill in FavoriteSkills)
                                {
                                <ListItemSkill Skill=@skill RollSkill=RollSkill ViewSkill=ViewSkill />
                                }
                            </MudList>
                        </MudTabPanel>
                        <MudTabPanel Text=@l10n["lblYourBestSkills"]>
                            <MudList Clickable=true Style="overflow:auto; height:280px">
                                @foreach (var skill in BestSkills)
                                {
                                <ListItemSkill Skill=@skill RollSkill=RollSkill ViewSkill=ViewSkill/>
                                }
                            </MudList>
                        </MudTabPanel>
                    </MudTabs>
                </MudExpansionPanel>
            </MudExpansionPanels>
            </MudPaper>

            <MudPaper Elevation=0 Outlined=true Square=true>
                <MudExpansionPanels Elevation=0>
                    <MudExpansionPanel Text=@l10n["lblFindSkill"] IsInitiallyExpanded=true DisableGutters=true>
                        <MudList Clickable=true Style="overflow:auto; max-height:340px">
                            <MudListSubheader>
                                <MudChipSet @bind-SelectedChip=SelectedDomain MultiSelection=false Filter=false Mandatory=true>
                                    <MudChip Text="All" Label=true Default=true 
                                             Size=Size.Large Variant=Variant.Text Color=Color.Default SelectedColor=Color.Primary>
                                             @l10n["lblAll"]
                                    </MudChip>
                                    @foreach (var d in SkillDomains)
                                    {
                                        <MudChip Text="@d.ToString()" Label=true 
                                                 Size=Size.Large Variant=Variant.Text Color=Color.Default SelectedColor=Color.Primary>
                                                 @l10n["SkillDomain."+d.ToString()]
                                        </MudChip>
                                    }
                                </MudChipSet>
                                <MudTextField @bind-Value=FilterTerm Placeholder="Search" 
                                    Adornment=Adornment.End AdornmentIcon=@Icons.Filled.Search 
                                    IconSize=Size.Medium Immediate=true></MudTextField>
                            </MudListSubheader>

                            @foreach (var skill in SkillList)
                            {
                                @if (CheckFilter(skill.Domain, skill.Name))
                                {
                                    <ListItemSkill Skill=skill RollSkill=RollSkill ViewSkill=ViewSkill TextFilter=@FilterTerm />
                                }
                            }
                        </MudList>
                    </MudExpansionPanel>
                </MudExpansionPanels>
            </MudPaper>
        </MudItem>
        <MudItem  xs=12 sm=6 md=7 lg=8>
            <MudPaper Elevation=0 Outlined=true>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>
}
else
{
<SkeletonNoCharacterData />
}


@code {
    private List<SkillDomain> SkillDomains;

    private IEnumerable<SkillsDTO> SkillList { get; set; }

    private IEnumerable<SkillsDTO> BestSkills { get; set; }

    private IEnumerable<SkillsDTO> FavoriteSkills { get; set; }

    private void LoadHeroData()
    {
        if (Hero.HasBorn)
        {
            SkillDomains = Hero.GetMasteredSkillDomains();
            SkillList = Hero.GetSkills();
            BestSkills = Hero.GetBestSkills();
            FavoriteSkills = Hero.GetFavoriteSkills();
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadHeroData();
    }


    // 


    private void RollSkill(SkillsDTO s)
    {

    }


    private void ViewSkill(SkillsDTO s)
    {

    }


    // FILTER REGION

    private string FilterTerm = "";

    private MudChip SelectedDomain;


    private bool CheckFilter(SkillDomain d, string Item)
    {
        bool DomainMatch = SelectedDomain is null || 
            SelectedDomain.Text == "All" || 
            SelectedDomain.Text == d.ToString();

        return DomainMatch && Item.ToLower().Contains(FilterTerm.ToLower());
    }

}
