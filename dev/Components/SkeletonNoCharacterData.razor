@using FateExplorer.ViewModel
@using System.IO
@using System

@inject IStringLocalizer<App> l10n
@inject ISnackbar Snackbar
@inject ITheHeroViMo Hero


<MudContainer Class="mt-16">
    <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Character</MudText>
    <MudText Align="Align.Center">@l10n["msgNoCharacterData"]</MudText>
    <MudGrid Class="mt-8">
        <MudItem xs="12" sm="6" md="4">
            <MudCard>
                <MudCardMedia Image="img/skeleton.webp" Height="200" />
                <MudCardContent>
                    <MudText Typo="Typo.h5">@l10n["lblNoCharacter"]</MudText>
                    <MudText Typo="Typo.body2">@l10n["msgLoadCharacterToUse"]</MudText>
                </MudCardContent>
                <MudCardActions>
                    <InputFile id="CharacterFileInput" OnChange="UploadCharacterFile" hidden  />
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled" Color="Color.Primary" Class="rounded-0"
                               StartIcon="@Icons.Filled.CloudUpload"
                               for="CharacterFileInput">
                        @l10n["btnUploadFile"]
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>

        @for(int i = 0; i < 2; i++)
        {
        <MudItem xs="12" sm="6" md="4">
            <MudCard>
                <MudCardContent>
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="190px" Animation="Animation.Wave"/>
                        <MudSkeleton Width="50%" Height="42px;" Class="rounded-0" />
                        <MudSkeleton Width="80%" Class="rounded-0"/>
                </MudCardContent>
                <MudCardActions>
                    <MudSkeleton Width="105px" Height="36px" />
                </MudCardActions>
            </MudCard>
        </MudItem>
        }
    </MudGrid>
</MudContainer>


@code {
    [Parameter] public EventCallback OnCharacterHasLoaded { get; set; }

    private async Task UploadCharacterFile(InputFileChangeEventArgs e)
    {
        bool IsExceptionFree = true;

        IBrowserFile CharacterFile = e.File;

        // TODO Do your validations here
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;

        if (CharacterFile.ContentType != "application/json")
        {
            string Message = string.Format(l10n["msgWrongContentType"], CharacterFile.ContentType);
            Snackbar.Add( Message, Severity.Error);
            IsExceptionFree = false;
        }

        //Snackbar.Add($"This files starts with letter {CharacterFile.Name.Substring(0, 1)}", Severity.Warning);
        //Snackbar.Add($"This file has the extension: {CharacterFile.Name.Split(".").Last()}", Severity.Info);

        var memoryStream = new MemoryStream();
        if (IsExceptionFree)
        {
            await CharacterFile.OpenReadStream().CopyToAsync(memoryStream);
            memoryStream.Dispose();
        }

        if(IsExceptionFree)
        {
            try
            {
                Hero.ReadCharacterFile(memoryStream.ToArray());
            }
            catch(Exception error)
            {
                IsExceptionFree = false;
                Snackbar.Add(l10n[error.Message], Severity.Error);
            }
        }

        if (IsExceptionFree)
            await OnCharacterHasLoaded.InvokeAsync();
    }

}
